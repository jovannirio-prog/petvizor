import { NextResponse } from 'next/server'

// Google Sheets API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const GOOGLE_SHEETS_API_KEY = process.env.GOOGLE_SHEETS_API_KEY
const SPREADSHEET_ID = '1ejjF77KXW5KEbGOrYrwxOKUfNhJWqdgeNbD8MgG6XqQ'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
const KNOWLEDGE_TABLES = {
  general_info: {
    name: '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–Ω–∏–∫–µ',
    priority: 1,
    description: '–ò–º—è, –∫–æ–Ω—Ç–∞–∫—Ç—ã, —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –ò–ò'
  },
  animals_breeds: {
    name: '–í–∏–¥—ã –∏ –ø–æ—Ä–æ–¥—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö',
    priority: 2,
    description: '–û–ø–∏—Å–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π'
  },
  situations: {
    name: '–ë–∞–∑–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
    priority: 3,
    description: '–Ø–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'
  },
  pricelist: {
    name: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —É—Å–ª—É–≥',
    priority: 4,
    description: '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç'
  },
  medications: {
    name: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤',
    priority: 5,
    description: '–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ —Å—Ö–µ–º—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è'
  },
  intents: {
    name: '–ë–∞–∑–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    priority: 6,
    description: '–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –ò–ò'
  },
  preventive_care: {
    name: '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —É—Ö–æ–¥',
    priority: 7,
    description: '–¢–∏–ø–æ–≤—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã'
  },
  faq: {
    name: '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
    priority: 8,
    description: 'FAQ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤'
  },
  response_template: {
    name: '–®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤',
    priority: 9,
    description: '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤'
  }
}

// –ö—ç—à –¥–ª—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
let knowledgeCache: any = null
let cacheTimestamp: number = 0
const CACHE_DURATION = 5 * 60 * 1000 // 5 –º–∏–Ω—É—Ç

async function loadTableData(tableName: string, apiKey: string, spreadsheetId: string) {
  const range = `${tableName}!A:Z`
  const url = `https://sheets.googleapis.com/v4/spreadsheets/${spreadsheetId}/values/${range}?key=${apiKey}`
  
  console.log(`üîç AI Knowledge: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ${tableName}...`)
  
  const response = await fetch(url)
  
  if (!response.ok) {
    console.warn(`‚ö†Ô∏è AI Knowledge: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É ${tableName}:`, response.status)
    return null
  }

  const data = await response.json()
  
  if (!data.values || data.values.length === 0) {
    console.warn(`‚ö†Ô∏è AI Knowledge: –¢–∞–±–ª–∏—Ü–∞ ${tableName} –ø—É—Å—Ç–∞`)
    return null
  }

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
  const headers = data.values[0]
  const rows = data.values.slice(1)
  
  return rows.map((row: any[], index: number) => {
    const record: any = {
      id: index + 1,
      code: `${tableName.toUpperCase()}_${index + 1}`,
      table: tableName,
      table_name: KNOWLEDGE_TABLES[tableName as keyof typeof KNOWLEDGE_TABLES]?.name || tableName
    }
    
    headers.forEach((header: string, colIndex: number) => {
      if (row[colIndex]) {
        const key = header.toLowerCase().replace(/\s+/g, '_')
        record[key] = row[colIndex]
      }
    })
    
    return record
  })
}

export async function GET() {
  try {
    if (!GOOGLE_SHEETS_API_KEY) {
      console.error('‚ùå AI Knowledge: GOOGLE_SHEETS_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
      return NextResponse.json({ error: 'API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω' }, { status: 500 })
    }

    console.log('üîç AI Knowledge: –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∏–∑ 9 —Ç–∞–±–ª–∏—Ü')

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const now = Date.now()
    if (knowledgeCache && (now - cacheTimestamp) < CACHE_DURATION) {
      console.log('üîç AI Knowledge: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
      return NextResponse.json({
        success: true,
        knowledge: knowledgeCache,
        count: knowledgeCache.length,
        timestamp: new Date(cacheTimestamp).toISOString(),
        cached: true
      })
    }

    console.log('üîç AI Knowledge: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ 9 —Ç–∞–±–ª–∏—Ü Google Sheets...')
    console.log('üîç AI Knowledge: Spreadsheet ID:', SPREADSHEET_ID)

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const tablePromises = Object.keys(KNOWLEDGE_TABLES).map(tableName => 
      loadTableData(tableName, GOOGLE_SHEETS_API_KEY!, SPREADSHEET_ID)
    )
    
    const tableResults = await Promise.allSettled(tablePromises)
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const allData: any[] = []
    const tableStats: any = {}
    
    tableResults.forEach((result, index) => {
      const tableName = Object.keys(KNOWLEDGE_TABLES)[index]
      
      if (result.status === 'fulfilled' && result.value) {
        allData.push(...result.value)
        tableStats[tableName] = result.value.length
        console.log(`‚úÖ AI Knowledge: –¢–∞–±–ª–∏—Ü–∞ ${tableName} - ${result.value.length} –∑–∞–ø–∏—Å–µ–π`)
      } else {
        tableStats[tableName] = 0
        console.warn(`‚ö†Ô∏è AI Knowledge: –¢–∞–±–ª–∏—Ü–∞ ${tableName} - –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏`)
      }
    })

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É —Ç–∞–±–ª–∏—Ü
    allData.sort((a, b) => {
      const priorityA = KNOWLEDGE_TABLES[a.table as keyof typeof KNOWLEDGE_TABLES]?.priority || 999
      const priorityB = KNOWLEDGE_TABLES[b.table as keyof typeof KNOWLEDGE_TABLES]?.priority || 999
      return priorityA - priorityB
    })

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
    knowledgeCache = allData
    cacheTimestamp = now

    console.log(`‚úÖ AI Knowledge: –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allData.length} –∑–∞–ø–∏—Å–µ–π –∏–∑ ${Object.keys(tableStats).length} —Ç–∞–±–ª–∏—Ü`)
    console.log('üìä AI Knowledge: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü–∞–º:', tableStats)
    
    return NextResponse.json({
      success: true,
      knowledge: allData,
      count: allData.length,
      table_stats: tableStats,
      tables_config: KNOWLEDGE_TABLES,
      timestamp: new Date().toISOString()
    })

  } catch (error) {
    console.error('‚ùå AI Knowledge: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', error)
    return NextResponse.json({ 
      error: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π',
      details: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'
    }, { status: 500 })
  }
}
