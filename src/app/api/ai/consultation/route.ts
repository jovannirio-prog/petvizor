import { createRouteHandlerClient } from '@supabase/auth-helpers-nextjs'
import { createClient } from '@supabase/supabase-js'
import { cookies } from 'next/headers'
import { NextResponse } from 'next/server'

// Google Sheets API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const GOOGLE_SHEETS_API_KEY = process.env.GOOGLE_SHEETS_API_KEY
const OPENAI_API_KEY = process.env.OPENAI_API_KEY
const SPREADSHEET_ID = '1ejjF77KXW5KEbGOrYrwxOKUfNhJWqdgeNbD8MgG6XqQ'

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
const KNOWLEDGE_TABLES = {
  general_info: {
    name: '–û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–Ω–∏–∫–µ',
    priority: 1,
    description: '–ò–º—è, –∫–æ–Ω—Ç–∞–∫—Ç—ã, —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è –ò–ò'
  },
  situations: {
    name: '–ë–∞–∑–∞ —Å–∏–º–ø—Ç–æ–º–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π',
    priority: 2,
    description: '–Ø–¥—Ä–æ —Å–∏—Å—Ç–µ–º—ã - –æ—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π'
  },
  animals_breeds: {
    name: '–í–∏–¥—ã –∏ –ø–æ—Ä–æ–¥—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö',
    priority: 3,
    description: '–û–ø–∏—Å–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–µ–π'
  },
  pricelist: {
    name: '–ü—Ä–∞–π—Å-–ª–∏—Å—Ç —É—Å–ª—É–≥',
    priority: 4,
    description: '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∞–π—Å-–ª–∏—Å—Ç'
  },
  medications: {
    name: '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤',
    priority: 5,
    description: '–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ —Å—Ö–µ–º—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è'
  },
  preventive_care: {
    name: '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —É—Ö–æ–¥',
    priority: 6,
    description: '–¢–∏–ø–æ–≤—ã–µ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã'
  },
  faq: {
    name: '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
    priority: 7,
    description: 'FAQ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤'
  },
  response_template: {
    name: '–®–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤',
    priority: 8,
    description: '–®–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤'
  },
  intents: {
    name: '–ë–∞–∑–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    priority: 9,
    description: '–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –ò–ò'
  }
}

// –ö—ç—à –¥–ª—è –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)
let knowledgeBaseCache: any[] = []
let lastCacheUpdate = 0
const CACHE_DURATION = 5 * 60 * 1000 // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

export async function POST(request: Request) {
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization
    const authHeader = request.headers.get('authorization')
    let supabase
    let user
    
    if (authHeader && authHeader.startsWith('Bearer ')) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º Bearer —Ç–æ–∫–µ–Ω
      const token = authHeader.replace('Bearer ', '')
      const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
      const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY!
      supabase = createClient(supabaseUrl, serviceRoleKey)
      
      const { data: { user: authUser }, error: authError } = await supabase.auth.getUser(token)
      if (authError || !authUser) {
        console.log('üîí AI Consultation: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω (Bearer)')
        return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
      }
      user = authUser
    } else {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º cookies (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
      supabase = createRouteHandlerClient({ cookies })
      const { data: { user: authUser }, error: authError } = await supabase.auth.getUser()
      if (authError || !authUser) {
        console.log('üîí AI Consultation: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω (cookies)')
        return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
      }
      user = authUser
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω
    if (!user) {
      console.log('üîí AI Consultation: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω')
      return NextResponse.json({ error: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' }, { status: 401 })
    }

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞
    const { message, petInfo, sessionId, conversationHistory: clientHistory } = await request.json()

    if (!message) {
      return NextResponse.json({ error: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ' }, { status: 400 })
    }

    console.log('üîç AI Consultation: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–æ–º—Ü–µ:', petInfo ? '–í—ã–±—Ä–∞–Ω –ø–∏—Ç–æ–º–µ—Ü' : '–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –≤—ã–±—Ä–∞–Ω')

    console.log('üîç AI Consultation: –ó–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.email, '–°–æ–æ–±—â–µ–Ω–∏–µ:', message)

    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–æ–ª–∏
    const { data: profile, error: profileError } = await supabase
      .from('profiles')
      .select(`
        role_id,
        user_roles (
          name,
          display_name
        )
      `)
      .eq('id', user.id)
      .single()

    if (profileError) {
      console.log('‚ö†Ô∏è AI Consultation: –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
    }

    const userRole = (profile?.user_roles as any)?.name || 'owner'
    console.log('üîç AI Consultation: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userRole)

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å, –∏–Ω–∞—á–µ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ë–î
    let conversationHistory: Array<{role: string, content: string}> = []
    
    if (clientHistory && Array.isArray(clientHistory) && clientHistory.length > 0) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å –∫–ª–∏–µ–Ω—Ç–∞
      conversationHistory = clientHistory
      console.log('üîç AI Consultation: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å –∫–ª–∏–µ–Ω—Ç–∞, —Å–æ–æ–±—â–µ–Ω–∏–π:', clientHistory.length)
    } else {
      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –ë–î (–≤—Ä–µ–º–µ–Ω–Ω–æ —É–ø—Ä–æ—â–µ–Ω–æ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –ë–î)
      try {
        const { data: history } = await supabase
          .from('chat_messages')
          .select('message, response, created_at')
          .eq('user_id', user.id)
          .order('created_at', { ascending: true })
          .limit(10) // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

        if (history && history.length > 0) {
          conversationHistory = history.map(msg => ({
            role: 'user',
            content: msg.message
          })).concat(history.map(msg => ({
            role: 'assistant',
            content: msg.response
          })))
          console.log('üîç AI Consultation: –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –ë–î:', history.length)
        } else {
          console.log('üîç AI Consultation: –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –ø—É—Å—Ç–∞')
        }
      } catch (error) {
        console.log('‚ö†Ô∏è AI Consultation: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:', error)
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º)
    let knowledgeBase = []
    const now = Date.now()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    if (knowledgeBaseCache.length > 0 && (now - lastCacheUpdate) < CACHE_DURATION) {
      knowledgeBase = knowledgeBaseCache
      console.log('üîç AI Consultation: –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π, –∑–∞–ø–∏—Å–µ–π:', knowledgeBase.length)
    } else {
      console.log('üîç AI Consultation: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...')
      console.log('üîç AI Consultation: GOOGLE_SHEETS_API_KEY:', GOOGLE_SHEETS_API_KEY ? '–ù–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù')
      console.log('üîç AI Consultation: SPREADSHEET_ID:', SPREADSHEET_ID)
      console.log('üîç AI Consultation: –¢–∞–±–ª–∏—Ü—ã:', Object.keys(KNOWLEDGE_TABLES))
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π (–µ—Å–ª–∏ Google Sheets –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)
    if (!GOOGLE_SHEETS_API_KEY) {
      console.log('üîç AI Consultation: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π')
      knowledgeBase = [
        {
          '–¢–µ–º–∞': '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è',
          '–û–ø–∏—Å–∞–Ω–∏–µ': '–í–∞–∫—Ü–∏–Ω–∞—Ü–∏—è - —ç—Ç–æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –º–µ—Ä–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö –æ—Ç –∏–Ω—Ñ–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π. –í–∫–ª—é—á–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–∏–µ –æ—Å–ª–∞–±–ª–µ–Ω–Ω—ã—Ö –∏–ª–∏ —É–±–∏—Ç—ã—Ö –≤–æ–∑–±—É–¥–∏—Ç–µ–ª–µ–π –±–æ–ª–µ–∑–Ω–µ–π –¥–ª—è –≤—ã—Ä–∞–±–æ—Ç–∫–∏ –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞.',
          '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': '–ü—Ä–æ–≤–æ–¥–∏—Ç—å –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—é –ø–æ –≥—Ä–∞—Ñ–∏–∫—É, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω–æ–º—É –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–æ–º. –û—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–∫—Ü–∏–Ω—ã: –æ—Ç –±–µ—à–µ–Ω—Å—Ç–≤–∞, —á—É–º—ã, –ø–∞—Ä–≤–æ–≤–∏—Ä—É—Å–∞.'
        },
        {
          '–¢–µ–º–∞': '–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ —É –∫–æ—à–µ–∫',
          '–û–ø–∏—Å–∞–Ω–∏–µ': '–û—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ - —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤—ã–∑–≤–∞–Ω–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ–º –≤ –æ—Ä–≥–∞–Ω–∏–∑–º —Ç–æ–∫—Å–∏—á–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤. –ú–æ–∂–µ—Ç –±—ã—Ç—å –æ—Å—Ç—Ä—ã–º –∏–ª–∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–º.',
          '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': '–ü—Ä–∏ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–∏ –Ω–∞ –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É. –ù–µ –≤—ã–∑—ã–≤–∞—Ç—å —Ä–≤–æ—Ç—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–∑–µ—Ü —Ç–æ–∫—Å–∏–Ω–∞.'
        },
        {
          '–¢–µ–º–∞': '–ü—Ä–æ—Ç–æ–∫–æ–ª –ø—Ä–∏–µ–º–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤',
          '–û–ø–∏—Å–∞–Ω–∏–µ': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø—Ä–∏–µ–º–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.',
          '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': '1. –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è 2. –°—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π 3. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ 4. –õ–µ—á–µ–Ω–∏–µ 5. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥'
        }
      ]
    } else if (GOOGLE_SHEETS_API_KEY) {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      console.log('üîç AI Consultation: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ 9 —Ç–∞–±–ª–∏—Ü Google Sheets...')
      
      const tablePromises = Object.keys(KNOWLEDGE_TABLES).map(async (tableName) => {
        try {
          const range = `${tableName}!A:Z`
          const url = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/values/${range}?key=${GOOGLE_SHEETS_API_KEY}`
          
          console.log(`üîç AI Consultation: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É ${tableName}...`)
          
          const response = await fetch(url)
          
          if (!response.ok) {
            console.warn(`‚ö†Ô∏è AI Consultation: –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É ${tableName}:`, response.status)
            return null
          }

          const data = await response.json()
          
          if (!data.values || data.values.length === 0) {
            console.warn(`‚ö†Ô∏è AI Consultation: –¢–∞–±–ª–∏—Ü–∞ ${tableName} –ø—É—Å—Ç–∞`)
            return null
          }

          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
          const headers = data.values[0]
          const rows = data.values.slice(1)
          
          return rows.map((row: any[], index: number) => {
            const record: any = {
              id: index + 1,
              code: `${tableName.toUpperCase()}_${index + 1}`,
              table: tableName,
              table_name: KNOWLEDGE_TABLES[tableName as keyof typeof KNOWLEDGE_TABLES]?.name || tableName
            }
            
            headers.forEach((header: string, colIndex: number) => {
              if (row[colIndex]) {
                const key = header.toLowerCase().replace(/\s+/g, '_')
                record[key] = row[colIndex]
              }
            })
            
            return record
          })
        } catch (error) {
          console.warn(`‚ö†Ô∏è AI Consultation: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã ${tableName}:`, error)
          return null
        }
      })
      
      const tableResults = await Promise.allSettled(tablePromises)
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      const allData: any[] = []
      const tableStats: any = {}
      
      tableResults.forEach((result, index) => {
        const tableName = Object.keys(KNOWLEDGE_TABLES)[index]
        
        if (result.status === 'fulfilled' && result.value) {
          allData.push(...result.value)
          tableStats[tableName] = result.value.length
          console.log(`‚úÖ AI Consultation: –¢–∞–±–ª–∏—Ü–∞ ${tableName} - ${result.value.length} –∑–∞–ø–∏—Å–µ–π`)
        } else {
          tableStats[tableName] = 0
          console.warn(`‚ö†Ô∏è AI Consultation: –¢–∞–±–ª–∏—Ü–∞ ${tableName} - –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏`)
        }
      })

      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É —Ç–∞–±–ª–∏—Ü
      allData.sort((a, b) => {
        const priorityA = KNOWLEDGE_TABLES[a.table as keyof typeof KNOWLEDGE_TABLES]?.priority || 999
        const priorityB = KNOWLEDGE_TABLES[b.table as keyof typeof KNOWLEDGE_TABLES]?.priority || 999
        return priorityA - priorityB
      })

      knowledgeBase = allData
      console.log(`‚úÖ AI Consultation: –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${allData.length} –∑–∞–ø–∏—Å–µ–π –∏–∑ ${Object.keys(tableStats).length} —Ç–∞–±–ª–∏—Ü`)
      console.log('üìä AI Consultation: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∞–±–ª–∏—Ü–∞–º:', tableStats)
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
      knowledgeBaseCache = knowledgeBase
      lastCacheUpdate = now
      console.log('üîç AI Consultation: –ö—ç—à –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø–∏—Å–µ–π:', knowledgeBase.length)
    } else {
      console.log('‚ö†Ô∏è AI Consultation: GOOGLE_SHEETS_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞')
    }
    }

    // –ò—â–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
    console.log('üîç AI Consultation: –ò—â–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', message)
    const relevantKnowledge = searchKnowledgeBase(message, knowledgeBase)
    console.log('üîç AI Consultation: –ù–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:', relevantKnowledge.length)
    if (relevantKnowledge.length > 0) {
      console.log('üîç AI Consultation: –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∑–∞–ø–∏—Å–∏:', JSON.stringify(relevantKnowledge, null, 2))
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
    const systemPrompt = generateSystemPrompt(userRole, relevantKnowledge, petInfo, conversationHistory)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ OpenAI API
    const aiResponse = await generateAIResponse(systemPrompt, message, conversationHistory)

         // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å–æ —Å—Ö–µ–º–æ–π
         // TODO: –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ö–µ–º—É –ë–î –¥–ª—è chat_messages
         console.log('‚ö†Ô∏è AI Consultation: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ')

    console.log('‚úÖ AI Consultation: –û—Ç–≤–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω')
    console.log('üîç AI Consultation: –ü—Ä–æ–≤–µ—Ä—è–µ–º relevantKnowledge:', relevantKnowledge)
    console.log('üîç AI Consultation: –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, relevantKnowledge.length:', relevantKnowledge.length)

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    const usedRecordCodes = relevantKnowledge.map(record => {
      const code = record.code || 'Unknown'
      const tableName = record.table_name || record.table || 'Unknown'
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∞–±–ª–∏—Ü—ã
      let title = '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
      
      switch (record.table) {
        case 'pricelist':
          title = record.service_name || record.—É—Å–ª—É–≥–∞ || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–£—Å–ª—É–≥–∞'
          break
        case 'situations':
          title = record.user_query || record.symptom || record.—Å–∏–º–ø—Ç–æ–º || record.question || record.–≤–æ–ø—Ä–æ—Å || '–°–∏—Ç—É–∞—Ü–∏—è'
          break
        case 'faq':
          title = record.question || record.–≤–æ–ø—Ä–æ—Å || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–í–æ–ø—Ä–æ—Å'
          break
        case 'medications':
          title = record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || record.medication_name || record.–ø—Ä–µ–ø–∞—Ä–∞—Ç || '–ü—Ä–µ–ø–∞—Ä–∞—Ç'
          break
        case 'animals_breeds':
          title = record.breed || record.–ø–æ—Ä–æ–¥–∞ || record.species || record.–≤–∏–¥ || '–ü–æ—Ä–æ–¥–∞'
          break
        case 'preventive_care':
          title = record.procedure_name || record.–ø—Ä–æ—Ü–µ–¥—É—Ä–∞ || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞'
          break
        case 'intents':
          title = record.intent || record.–Ω–∞–º–µ—Ä–µ–Ω–∏–µ || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–ù–∞–º–µ—Ä–µ–Ω–∏–µ'
          break
        case 'response_template':
          title = record.template_name || record.—à–∞–±–ª–æ–Ω || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–®–∞–±–ª–æ–Ω'
          break
        case 'general_info':
          title = record.clinic_name || record.–∫–ª–∏–Ω–∏–∫–∞ || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'
          break
        default:
          // –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–ª—è—Ö
          title = record.title || record.–∑–∞–≥–æ–ª–æ–≤–æ–∫ || record.name || record.–Ω–∞–∑–≤–∞–Ω–∏–µ || 
                 record.symptom || record.—Å–∏–º–ø—Ç–æ–º || record.question || record.–≤–æ–ø—Ä–æ—Å || 
                 record.service || record.—É—Å–ª—É–≥–∞ || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
      }
      
      // –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–¥
      if (!title || title.trim() === '' || title === '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è') {
        title = `${record.table || 'Unknown'} –∑–∞–ø–∏—Å—å ${record.id || 'Unknown'}`
      }
      
      console.log('üîç AI Consultation: –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫:', { 
        code, 
        tableName,
        title, 
        table: record.table,
        availableFields: Object.keys(record)
      })
      return `${code} (${tableName}): ${title}`
    }).join('\n')
    
    console.log('üîç AI Consultation: –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏:', usedRecordCodes)
    console.log('üîç AI Consultation: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å sources:', relevantKnowledge.length > 0 ? usedRecordCodes : null)
    
    return NextResponse.json({ 
      response: aiResponse,
      sessionId: sessionId || `session_${Date.now()}`,
      sources: relevantKnowledge.length > 0 ? usedRecordCodes : null,
      context: {
        userRole: userRole,
        knowledgeBaseSize: knowledgeBase.length,
        relevantKnowledgeFound: relevantKnowledge.length,
        usedRecordCodes: usedRecordCodes
      }
    })

  } catch (error) {
    console.error('‚ùå AI Consultation: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
    return NextResponse.json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 })
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
function searchKnowledgeBase(query: string, knowledgeBase: any[]): any[] {
  console.log('üîç AI Consultation: –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', query)
  console.log('üîç AI Consultation: –†–∞–∑–º–µ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π:', knowledgeBase.length)
  
  if (knowledgeBase.length === 0) {
    console.log('‚ö†Ô∏è AI Consultation: –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—É—Å—Ç–∞')
    return []
  }
  
  const queryLower = query.toLowerCase()
  const keywords = queryLower.split(' ').filter(word => word.length > 2)
  console.log('üîç AI Consultation: –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:', keywords)
  
  // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –æ—Ü–µ–Ω–∫–æ–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏
  const scoredResults = knowledgeBase.map(item => {
    const itemText = Object.values(item).join(' ').toLowerCase()
    let score = 0
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    keywords.forEach(keyword => {
      if (itemText.includes(keyword)) {
        score += 1
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—á–∫–∏ –∑–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
        if (item.–ó–∞–≥–æ–ª–æ–≤–æ–∫ && item.–ó–∞–≥–æ–ª–æ–≤–æ–∫.toLowerCase().includes(keyword)) {
          score += 2
        }
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ—á–∫–∏ –∑–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö
        if (item['–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'] && item['–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞'].toLowerCase().includes(keyword)) {
          score += 3
        }
      }
    })
    
    return { item, score }
  })
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–ø–∏—Å–∏ —Å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
  const results = scoredResults
    .filter(result => result.score > 0)
    .sort((a, b) => b.score - a.score)
    .slice(0, 5) // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ø-5 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    .map(result => result.item)
  
  // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  if (results.length > 0) {
    console.log('üîç AI Consultation: –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:', results.length)
    results.forEach((item, index) => {
      console.log(`üîç AI Consultation: –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ ${index + 1}:`, Object.values(item).join(' ').substring(0, 100) + '...')
    })
  }
  
  console.log('üîç AI Consultation: –ò—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π:', results.length)
  return results
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
function generateSystemPrompt(userRole: string, relevantKnowledge: any[], petInfo: any, conversationHistory: Array<{role: string, content: string}>): string {
  const roleDescriptions = {
    owner: '–í–ª–∞–¥–µ–ª–µ—Ü –ø–∏—Ç–æ–º—Ü–∞ - –æ—Ç–≤–µ—á–∞–π –ø—Ä–æ—Å—Ç—ã–º —è–∑—ã–∫–æ–º, –±–µ–∑ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –∂–∞—Ä–≥–æ–Ω–∞, —Å —ç–º–ø–∞—Ç–∏–µ–π',
    admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º',
    clinic_admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏ - —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–µ –∏ –ø–æ–º–æ–≥–∞–µ—à—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø–æ —Ä–∞–±–æ—Ç–µ –∫–ª–∏–Ω–∏–∫–∏, –ø—Ä–∏–µ–º—É –∫–ª–∏–µ–Ω—Ç–æ–≤, –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º—ã, –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º —Ä–∞–±–æ—Ç—ã, —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º –∏ –¥—Ä—É–≥–∏–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏. –û—Ç–≤–µ—á–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, —Å –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ —Ä–∞–±–æ—Ç—ã –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏.',
    clinic_vet: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–π –≤—Ä–∞—á - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, —Å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Ç–µ—Ä–º–∏–Ω–æ–ª–æ–≥–∏–µ–π',
    knowledge: '–†–µ–¥–∞–∫—Ç–æ—Ä –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π - —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
    breeder: '–ó–∞–≤–æ–¥—á–∏–∫ - —Å —É—á–µ—Ç–æ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è –∏ –≥–µ–Ω–µ—Ç–∏–∫–∏',
    shelter: '–ü—Ä–∏—é—Ç/–í–æ–ª–æ–Ω—Ç–µ—Ä - —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å',
    partner: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø–∞—Ä—Ç–Ω–µ—Ä - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ, —Å —É—á–µ—Ç–æ–º –±–∏–∑–Ω–µ—Å-–∞—Å–ø–µ–∫—Ç–æ–≤'
  }

  const roleDesc = roleDescriptions[userRole as keyof typeof roleDescriptions] || roleDescriptions.owner

  let prompt = `–¢—ã ‚Äî –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏ LeoVet. ${roleDesc}.

–ü–†–ê–í–ò–õ–ê:
1. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π LeoVet –Ω–∞–¥ –æ–±—â–∏–º–∏ –∑–Ω–∞–Ω–∏—è–º–∏
2. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º
3. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É
4. –£—á–∏—Ç—ã–≤–∞–π —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ
5. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏–µ–π, –≤–µ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É
6. –ü—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –¥–∞–≤–∞–π —á–µ—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥—É–π —Å—Ä–æ—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –≤—Ä–∞—á—É
7. –í–ê–ñ–ù–û: –ü–æ–º–Ω–∏ –≤–µ—Å—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ —Å—Å—ã–ª–∞–π—Å—è –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
8. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç "–ø–æ–º–Ω–∏—à—å –ª–∏ —Ç—ã...", –æ—Ç–≤–µ—á–∞–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞

${userRole === 'clinic_admin' ? `
–°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –ü–†–ê–í–ò–õ–ê –î–õ–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê –í–ï–¢–ö–õ–ò–ù–ò–ö–ò:
- –¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–µ LeoVet –∏ –ø–æ–º–æ–≥–∞–µ—à—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
- –¢—ã –∑–Ω–∞–µ—à—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã —Ä–∞–±–æ—Ç—ã –∫–ª–∏–Ω–∏–∫–∏, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –ø—Ä–∏–µ–º–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
- –¢—ã –º–æ–∂–µ—à—å –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º, –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º—ã
- –¢—ã –ø–æ–Ω–∏–º–∞–µ—à—å —Å–ø–µ—Ü–∏—Ñ–∏–∫—É —Ä–∞–±–æ—Ç—ã –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∏–Ω–∏–∫–∏
- –û—Ç–≤–µ—á–∞–π –∫–∞–∫ –∫–æ–ª–ª–µ–≥–∞-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –≤—Å–µ —Ç–æ–Ω–∫–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã
` : ''}

–†–ï–õ–ï–í–ê–ù–¢–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô LEOVET:
${relevantKnowledge.length > 0 
  ? relevantKnowledge.map((item, index) => 
      `${index + 1}. ${Object.entries(item)
        .map(([key, value]) => `${key}: ${value}`)
        .join(', ')}`
    ).join('\n')
  : '–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
}

–í–ê–ñ–ù–û: –ù–ï —É–ø–æ–º–∏–Ω–∞–π –≤ –æ—Ç–≤–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–ª–∏ –∫–æ–¥—ã –∑–∞–ø–∏—Å–µ–π - —ç—Ç–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

${petInfo ? `–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ò–¢–û–ú–¶–ï: ${JSON.stringify(petInfo)}` : '–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–ò–¢–û–ú–¶–ï: –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –≤—ã–±—Ä–∞–Ω. –û—Ç–≤–µ—á–∞–π –≤ –æ–±—â–µ–º, –Ω–æ –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É—Ç–æ—á–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ç–æ–º—Ü–µ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞.'}

${conversationHistory.length > 0 ? `
–ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê (–¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞):
${conversationHistory.map((msg, index) => `${index + 1}. ${msg.role}: ${msg.content}`).join('\n')}
` : '–ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê: –≠—Ç–æ –Ω–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞'}

–†–û–õ–¨ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: ${userRole === 'clinic_admin' ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏ LeoVet' : userRole}

–í–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: `

  return prompt
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenAI API
async function generateAIResponse(systemPrompt: string, userMessage: string, conversationHistory: any[]): Promise<string> {
  if (!OPENAI_API_KEY) {
    console.log('‚ö†Ô∏è AI Consultation: OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É')
    return generateFallbackResponse(userMessage)
  }

  try {
    const messages = [
      { role: 'system', content: systemPrompt },
      ...conversationHistory,
      { role: 'user', content: userMessage }
    ]

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-3.5-turbo',
        messages: messages,
        max_tokens: 500,
        temperature: 0.7,
      }),
    })

    if (!response.ok) {
      console.error('‚ùå AI Consultation: –û—à–∏–±–∫–∞ OpenAI API:', response.status)
      return generateFallbackResponse(userMessage)
    }

    const data = await response.json()
    return data.choices[0]?.message?.content || generateFallbackResponse(userMessage)

  } catch (error) {
    console.error('‚ùå AI Consultation: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI:', error)
    return generateFallbackResponse(userMessage)
  }
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ OpenAI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
function generateFallbackResponse(userMessage: string): string {
  const responses = [
    "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å! –û—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π LeoVet, –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ —ç—Ç–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Å –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω—ã–º –≤—Ä–∞—á–æ–º.",
    "–°–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º LeoVet, —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –¥–∞–Ω–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É.",
    "–í –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π LeoVet –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ø–æ–¥–æ–±–Ω—ã–º —Å–ª—É—á–∞—è–º. –†–µ–∫–æ–º–µ–Ω–¥—É—é –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–º—É –≤—Ä–∞—á—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
    "–≠—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –≤–µ—Ç–∫–ª–∏–Ω–∏–∫—É LeoVet –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
    "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤–µ—Ç–∫–ª–∏–Ω–∏–∫–∏ LeoVet."
  ]

  const responseIndex = userMessage.length % responses.length
  return responses[responseIndex]
}
