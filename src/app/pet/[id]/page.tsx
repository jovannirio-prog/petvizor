'use client'

import { useState, useEffect } from 'react'
import NavigationWrapper from '@/components/NavigationWrapper'
import { useUser } from '@/hooks/useUser'
import { useRouter, useSearchParams } from 'next/navigation'
import { 
  PawPrint, 
  ArrowLeft,
  Edit,
  Trash2,
  Calendar,
  Weight,
  Heart,
  MapPin,
  Phone,
  MessageCircle,
  User,
  Eye
} from 'lucide-react'
import Link from 'next/link'
import PetQRCode from '@/components/PetQRCode'
import PetEvents from '@/components/PetEvents'

interface Pet {
  id: string
  user_id: string
  name: string
  species: string | null
  breed: string | null
  birth_date: string | null
  weight: number | null
  photo_url: string | null
  lost_comment: string | null
  created_at: string
  updated_at: string
}

export default function PetPage({ params }: { params: { id: string } }) {
  const { user, loading } = useUser()
  const router = useRouter()
  const searchParams = useSearchParams()
  const [pet, setPet] = useState<Pet | null>(null)
  const [loadingPet, setLoadingPet] = useState(true)
  const [error, setError] = useState('')
  const [ownerProfile, setOwnerProfile] = useState<any>(null)
  const [loadingOwner, setLoadingOwner] = useState(false)
  const [isPreviewMode, setIsPreviewMode] = useState(false)

  useEffect(() => {
    if (!loading && !user) {
      router.push('/login')
    }
  }, [user, loading, router])

  useEffect(() => {
    if (user && params.id) {
      loadPet()
    }
  }, [user, params.id])

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è searchParams
  useEffect(() => {
    const previewMode = searchParams.get('preview') === 'true'
    console.log('üîß Pet Page: searchParams –∏–∑–º–µ–Ω–∏–ª–∏—Å—å, preview mode:', previewMode)
    setIsPreviewMode(previewMode)
  }, [searchParams])

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    const previewMode = searchParams.get('preview') === 'true'
    console.log('üîß Pet Page: –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞, preview mode:', previewMode)
    setIsPreviewMode(previewMode)
  }, [])

  // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ URL (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ refresh)
  useEffect(() => {
    if (user && params.id) {
      const urlParams = new URLSearchParams(window.location.search)
      if (urlParams.has('refresh')) {
        console.log('üîß Pet Page: –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä refresh, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ')
        loadPet()
        // –£–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä refresh –∏–∑ URL
        const newUrl = window.location.pathname
        window.history.replaceState({}, '', newUrl)
      }
    }
  }, [user, params.id])

  // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  useEffect(() => {
    const handleFocus = () => {
      if (user && params.id) {
        console.log('üîß Pet Page: –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ')
        loadPet()
      }
    }

    window.addEventListener('focus', handleFocus)
    return () => window.removeEventListener('focus', handleFocus)
  }, [user, params.id])

  const loadPet = async () => {
    try {
      console.log('üîß Pet Page: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞:', params.id)
      
      const response = await fetch(`/api/pets/${params.id}`, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('supabase_access_token')}`
        }
      })
      
      if (response.ok) {
        const data = await response.json()
        console.log('üîß Pet Page: –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞:', data)
        setPet(data)
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü)
        if (user && data.user_id !== user.id) {
          loadOwnerProfile(data.user_id)
        }
      } else if (response.status === 404) {
        console.error('üîß Pet Page: –ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω')
        setError('–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω')
      } else {
        console.error('üîß Pet Page: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Ç–æ–º—Ü–∞, —Å—Ç–∞—Ç—É—Å:', response.status)
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Ç–æ–º—Ü–∞')
      }
    } catch (error) {
      console.error('üîß Pet Page: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Ç–æ–º—Ü–∞:', error)
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∏—Ç–æ–º—Ü–∞')
    } finally {
      setLoadingPet(false)
    }
  }

  const loadOwnerProfile = async (ownerId: string) => {
    try {
      console.log('üîß Pet Page: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞:', ownerId)
      setLoadingOwner(true)
      
      const response = await fetch(`/api/profile/${ownerId}`)
      
      if (response.ok) {
        const data = await response.json()
        console.log('üîß Pet Page: –ü–æ–ª—É—á–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞:', data)
        setOwnerProfile(data)
      } else {
        console.error('üîß Pet Page: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞, —Å—Ç–∞—Ç—É—Å:', response.status)
      }
    } catch (error) {
      console.error('üîß Pet Page: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞:', error)
    } finally {
      setLoadingOwner(false)
    }
  }

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  useEffect(() => {
    if (user && pet && pet.user_id === user.id && isPreviewMode && !ownerProfile) {
      loadOwnerProfile(pet.user_id)
    }
  }, [user, pet, isPreviewMode, ownerProfile])

  const getSpeciesIcon = (species: string | null) => {
    if (!species) return 'üêæ'
    
    switch (species.toLowerCase()) {
      case 'dog':
      case '—Å–æ–±–∞–∫–∞':
        return 'üêï'
      case 'cat':
      case '–∫–æ—à–∫–∞':
        return 'üê±'
      case 'bird':
      case '–ø—Ç–∏—Ü–∞':
        return 'üê¶'
      case 'fish':
      case '—Ä—ã–±–∞':
        return 'üê†'
      default:
        return 'üêæ'
    }
  }

  const formatDate = (dateString: string | null) => {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    return new Date(dateString).toLocaleDateString('ru-RU')
  }

  const calculateAge = (birthDate: string | null) => {
    if (!birthDate) return null
    const birth = new Date(birthDate)
    const today = new Date()
    const ageInYears = today.getFullYear() - birth.getFullYear()
    const ageInMonths = today.getMonth() - birth.getMonth()
    
    if (ageInYears > 0) {
      return `${ageInYears} ${ageInYears === 1 ? '–≥–æ–¥' : ageInYears < 5 ? '–≥–æ–¥–∞' : '–ª–µ—Ç'}`
    } else if (ageInMonths > 0) {
      return `${ageInMonths} ${ageInMonths === 1 ? '–º–µ—Å—è—Ü' : ageInMonths < 5 ? '–º–µ—Å—è—Ü–∞' : '–º–µ—Å—è—Ü–µ–≤'}`
    } else {
      return '–ú–µ–Ω–µ–µ –º–µ—Å—è—Ü–∞'
    }
  }

  if (loading || loadingPet || (user && pet && pet.user_id !== user.id && loadingOwner)) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center">
        <div className="text-center">
          <div className="w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    )
  }

  if (!user) {
    return null
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <NavigationWrapper />
        <div className="max-w-4xl mx-auto p-4 pt-8">
          <div className="bg-white rounded-lg shadow-lg p-8 text-center">
            <PawPrint className="h-16 w-16 text-gray-300 mx-auto mb-4" />
            <h1 className="text-2xl font-bold text-gray-900 mb-2">–û—à–∏–±–∫–∞</h1>
            <p className="text-gray-600 mb-6">{error}</p>
            <Link
              href="/pets"
              className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center"
            >
              <ArrowLeft className="h-5 w-5 mr-2" />
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–∏—Ç–æ–º—Ü–µ–≤
            </Link>
          </div>
        </div>
      </div>
    )
  }

  if (!pet) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
        <NavigationWrapper />
        <div className="max-w-4xl mx-auto p-4 pt-8">
          <div className="bg-white rounded-lg shadow-lg p-8 text-center">
            <PawPrint className="h-16 w-16 text-gray-300 mx-auto mb-4" />
            <h1 className="text-2xl font-bold text-gray-900 mb-2">–ü–∏—Ç–æ–º–µ—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p className="text-gray-600 mb-6">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∏—Ç–æ–º—Ü–∞</p>
            <Link
              href="/pets"
              className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center"
            >
              <ArrowLeft className="h-5 w-5 mr-2" />
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É –ø–∏—Ç–æ–º—Ü–µ–≤
            </Link>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100">
      <NavigationWrapper />
      
      <div className="max-w-4xl mx-auto p-4 pt-8">
        {/* Header */}
        <div className="flex items-center justify-between mb-8">
          <div className="flex items-center">
            <Link 
              href={user && pet && pet.user_id === user.id ? "/pets" : "/"} 
              className="flex items-center text-gray-600 hover:text-gray-900 mr-4"
            >
              <ArrowLeft className="h-5 w-5 mr-2" />
              {user && pet && pet.user_id === user.id ? "–ù–∞–∑–∞–¥" : "–ù–∞ –≥–ª–∞–≤–Ω—É—é"}
            </Link>
            <div className="flex items-center">
              <PawPrint className="h-8 w-8 text-blue-600 mr-3" />
              <div>
                <h1 className="text-3xl font-bold text-gray-900">{pet.name}</h1>
                {isPreviewMode && (
                  <p className="text-sm text-blue-600 font-medium">–†–µ–∂–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</p>
                )}
              </div>
            </div>
          </div>
          
          {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –ø–∏—Ç–æ–º—Ü–∞ */}
          {user && pet.user_id === user.id && !isPreviewMode && (
            <div className="flex items-center space-x-2">
              <Link
                href={`/pet/${pet.id}/edit`}
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center"
              >
                <Edit className="h-4 w-4 mr-2" />
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Link>
              <button
                onClick={() => {
                  console.log('üîß Pet Page: –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
                  // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                  window.location.href = `/pet/${pet.id}?preview=true`
                }}
                className="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center"
              >
                <Eye className="h-4 w-4 mr-2" />
                –ü—É–±–ª–∏—á–Ω—ã–π QR-–ø—Ä–æ—Ñ–∏–ª—å
              </button>
              <button
                onClick={() => {/* TODO: Delete pet */}}
                className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors flex items-center"
              >
                <Trash2 className="h-4 w-4 mr-2" />
                –£–¥–∞–ª–∏—Ç—å
              </button>
            </div>
          )}
          
          {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
          {user && pet.user_id === user.id && isPreviewMode && (
            <div className="flex items-center space-x-2">
              <button
                onClick={() => {
                  console.log('üîß Pet Page: –í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
                  // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                  window.location.href = `/pet/${pet.id}`
                }}
                className="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors flex items-center"
              >
                <ArrowLeft className="h-4 w-4 mr-2" />
                –í—ã–π—Ç–∏ –∏–∑ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
              </button>
            </div>
          )}
        </div>

        <div className="grid md:grid-cols-2 gap-8">
          {/* Pet Photo */}
          <div className="space-y-6">
            <div className="bg-white rounded-lg shadow-lg overflow-hidden">
              <div className="aspect-square bg-gradient-to-br from-blue-100 to-purple-100 flex items-center justify-center">
                {pet.photo_url ? (
                  <img 
                    src={pet.photo_url} 
                    alt={pet.name}
                    className="w-full h-full object-cover"
                    onError={(e) => {
                      const target = e.target as HTMLImageElement
                      target.style.display = 'none'
                      target.nextElementSibling?.classList.remove('hidden')
                    }}
                  />
                ) : null}
                <div className={`text-8xl ${pet.photo_url ? 'hidden' : ''}`}>
                  {getSpeciesIcon(pet.species)}
                </div>
              </div>
            </div>

            {/* QR Code - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –ø–∏—Ç–æ–º—Ü–∞, –Ω–æ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
            {user && pet.user_id === user.id && !isPreviewMode && (
              <PetQRCode petId={pet.id} petName={pet.name} />
            )}
          </div>

          {/* Pet Info */}
          <div className="space-y-6">
            {/* Basic Info */}
            <div className="bg-white rounded-lg shadow-lg p-6">
              <h2 className="text-xl font-bold text-gray-900 mb-4">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              <div className="space-y-4">
                <div className="flex items-center">
                  <PawPrint className="h-5 w-5 text-gray-400 mr-3" />
                  <div>
                    <p className="text-sm text-gray-500">–í–∏–¥</p>
                    <p className="font-medium">{pet.species || '–ù–µ —É–∫–∞–∑–∞–Ω'}</p>
                  </div>
                </div>
                
                {pet.breed && (
                  <div className="flex items-center">
                    <Heart className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm text-gray-500">–ü–æ—Ä–æ–¥–∞</p>
                      <p className="font-medium">{pet.breed}</p>
                    </div>
                  </div>
                )}
                
                {pet.birth_date && (
                  <div className="flex items-center">
                    <Calendar className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm text-gray-500">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</p>
                      <p className="font-medium">{formatDate(pet.birth_date)}</p>
                      <p className="text-xs text-blue-600">{calculateAge(pet.birth_date)}</p>
                    </div>
                  </div>
                )}
                
                {pet.weight && (
                  <div className="flex items-center">
                    <Weight className="h-5 w-5 text-gray-400 mr-3" />
                    <div>
                      <p className="text-sm text-gray-500">–í–µ—Å</p>
                      <p className="font-medium">{pet.weight} –∫–≥</p>
                    </div>
                  </div>
                )}
              </div>
            </div>

            {/* Events - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –ø–∏—Ç–æ–º—Ü–∞ */}
            {user && pet.user_id === user.id && (
              <PetEvents petId={pet.id} petName={pet.name} />
            )}

            {/* Lost Info */}
            {pet.lost_comment && (
              <div className="bg-white rounded-lg shadow-lg p-6">
                <h2 className="text-xl font-bold text-gray-900 mb-4">–ï—Å–ª–∏ –ø–æ—Ç–µ—Ä—è–ª—Å—è</h2>
                <div className="space-y-4">
                  <div className="flex items-start">
                    <MessageCircle className="h-5 w-5 text-gray-400 mr-3 mt-1" />
                    <div>
                      <p className="text-sm text-gray-500">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</p>
                      <p className="font-medium">{pet.lost_comment}</p>
                    </div>
                  </div>
                </div>
              </div>
            )}

            {/* Owner Contact Info - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü –∏–ª–∏ –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
            {((user && pet.user_id !== user.id) || (user && pet.user_id === user.id && isPreviewMode)) && (
              <div className="bg-white rounded-lg shadow-lg p-6">
                <h2 className="text-xl font-bold text-gray-900 mb-4">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</h2>
                <div className="space-y-4">
                  {loadingOwner ? (
                    <div className="flex items-center">
                      <div className="w-4 h-4 border-2 border-blue-500 border-t-transparent rounded-full animate-spin mr-3"></div>
                      <span className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤...</span>
                    </div>
                  ) : ownerProfile ? (
                    <>
                      <div className="flex items-center">
                        <User className="h-5 w-5 text-gray-400 mr-3" />
                        <div>
                          <p className="text-sm text-gray-500">–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</p>
                          <p className="font-medium">{ownerProfile.full_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
                        </div>
                      </div>
                      {ownerProfile.phone && (
                        <div className="flex items-center">
                          <Phone className="h-5 w-5 text-gray-400 mr-3" />
                          <div>
                            <p className="text-sm text-gray-500">–¢–µ–ª–µ—Ñ–æ–Ω</p>
                            <a 
                              href={`tel:${ownerProfile.phone}`}
                              className="font-medium text-blue-600 hover:text-blue-800"
                            >
                              {ownerProfile.phone}
                            </a>
                          </div>
                        </div>
                      )}
                    </>
                  ) : (
                    <div className="text-center text-gray-500">
                      <p>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}
