'use client'

import { useState, useEffect } from 'react'
import { Download, QrCode, Loader2 } from 'lucide-react'

interface PetQRCodeProps {
  petId: string
  petName: string
  size?: number
}

export default function PetQRCode({ petId, petName, size = 120 }: PetQRCodeProps) {
  const [qrCodeUrl, setQrCodeUrl] = useState<string>('')
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [isGenerated, setIsGenerated] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π QR-–∫–æ–¥ –¥–ª—è —ç—Ç–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞
  useEffect(() => {
    const savedQRCode = localStorage.getItem(`qr-code-${petId}`)
    if (savedQRCode) {
      setQrCodeUrl(savedQRCode)
      setIsGenerated(true)
      console.log('üîß PetQRCode: –ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π QR-–∫–æ–¥ –¥–ª—è –ø–∏—Ç–æ–º—Ü–∞:', petId)
    }
  }, [petId])

  const generateQRCode = async () => {
    try {
      console.log('üîß PetQRCode: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –¥–ª—è –ø–∏—Ç–æ–º—Ü–∞:', petId)
      setLoading(true)
      setError('')
      setIsGenerated(false) // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É

      // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–∏—Ç–æ–º—Ü–∞
      const publicUrl = `${window.location.origin}/pet/${petId}`
      console.log('üîß PetQRCode: –ü—É–±–ª–∏—á–Ω—ã–π URL:', publicUrl)

      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º QRCode
      const QRCode = (await import('qrcode')).default

      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π canvas
      const canvas = document.createElement('canvas')
      canvas.width = size
      canvas.height = size

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
      await QRCode.toCanvas(canvas, publicUrl, {
        width: size,
        margin: 2,
        color: {
          dark: '#000000',
          light: '#FFFFFF'
        },
        errorCorrectionLevel: 'M'
      })

      // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const url = canvas.toDataURL('image/png')
      setQrCodeUrl(url)
      setIsGenerated(true)
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º QR-–∫–æ–¥ –≤ localStorage
      localStorage.setItem(`qr-code-${petId}`, url)
      console.log('üîß PetQRCode: QR-–∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –¥–ª—è –ø–∏—Ç–æ–º—Ü–∞:', petId)
    } catch (err: any) {
      console.error('üîß PetQRCode: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', err)
      setError(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞: ${err.message}`)
    } finally {
      setLoading(false)
    }
  }

  const downloadQRCode = () => {
    if (!qrCodeUrl) {
      console.error('QR-–∫–æ–¥ –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω')
      return
    }

    try {
      const link = document.createElement('a')
      link.download = `qr-${petName.toLowerCase().replace(/\s+/g, '-')}.png`
      link.href = qrCodeUrl
      document.body.appendChild(link)
      link.click()
      document.body.removeChild(link)
      console.log('üîß PetQRCode: QR-–∫–æ–¥ —Å–∫–∞—á–∞–Ω')
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:', err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ QR-–∫–æ–¥–∞')
    }
  }

  return (
    <div className="bg-white rounded-lg shadow-lg p-4">
      <h3 className="text-lg font-bold text-gray-900 mb-4 flex items-center">
        <QrCode className="h-5 w-5 mr-2 text-blue-600" />
        QR-–∫–æ–¥ –ø–∏—Ç–æ–º—Ü–∞
      </h3>
      
      <div className="text-center">
        {!isGenerated ? (
          <div className="space-y-4">
            <div className="w-24 h-24 bg-gray-100 rounded-lg mx-auto flex items-center justify-center">
              <QrCode className="h-8 w-8 text-gray-400" />
            </div>
            <button
              onClick={generateQRCode}
              disabled={loading}
              className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed mx-auto"
            >
              {loading ? (
                <>
                  <Loader2 className="h-4 w-4 animate-spin" />
                  <span>–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...</span>
                </>
              ) : (
                <>
                  <QrCode className="h-4 w-4" />
                  <span>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å QR-–∫–æ–¥</span>
                </>
              )}
            </button>
            {error && (
              <p className="text-red-600 text-sm">{error}</p>
            )}
          </div>
        ) : (
          <div className="space-y-4">
            <div className="bg-white border-2 border-gray-200 rounded-lg p-3">
              <img
                src={qrCodeUrl}
                alt={`QR-–∫–æ–¥ –¥–ª—è ${petName}`}
                className="mx-auto block"
                style={{ maxWidth: '100%', height: 'auto' }}
              />
            </div>
            <div className="space-y-2">
              <button
                onClick={downloadQRCode}
                className="w-full bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center space-x-2"
              >
                <Download className="h-4 w-4" />
                <span>–°–∫–∞—á–∞—Ç—å</span>
              </button>
              <button
                onClick={generateQRCode}
                disabled={loading}
                className="w-full bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors flex items-center justify-center space-x-2 disabled:opacity-50 disabled:cursor-not-allowed text-sm"
              >
                {loading ? (
                  <>
                    <Loader2 className="h-4 w-4 animate-spin" />
                    <span>–û–±–Ω–æ–≤–ª—è–µ–º...</span>
                  </>
                ) : (
                  <>
                    <QrCode className="h-4 w-4" />
                    <span>–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å</span>
                  </>
                )}
              </button>
            </div>
            <p className="text-xs text-gray-500">
              QR-–∫–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏—á–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–∏—Ç–æ–º—Ü–∞
            </p>
          </div>
        )}
      </div>
    </div>
  )
}
